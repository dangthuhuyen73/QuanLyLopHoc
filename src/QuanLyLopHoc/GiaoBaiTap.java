package QuanLyLopHoc;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.border.LineBorder;
import com.toedter.calendar.JDateChooser;
import com.github.lgooddatepicker.components.TimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;

public class GiaoBaiTap extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JTextField TenGV_text;
    private JTextField TieuDe_Text;
    private JTextArea ND_textArea;
    private JComboBox<String> Mon_comboBox;
    private JDateChooser NgayNop;
    private TimePicker timePicker;

 // Danh s√°ch l∆∞u b√†i t·∫≠p
    public static ArrayList<BaiTapInfo> danhSachBaiTap = new ArrayList<>();
    // Constructor m·∫∑c ƒë·ªãnh
    public GiaoBaiTap() {
        initialize();
    }

    // Constructor nh·∫≠n th√¥ng tin t√™n gi·∫£ng vi√™n v√† m√¥n h·ªçc
    public GiaoBaiTap(String tenGV, String monHoc) {
        initialize();
        TenGV_text.setText(tenGV); // Hi·ªÉn th·ªã t√™n gi·∫£ng vi√™n
        Mon_comboBox.setSelectedItem(monHoc); // Hi·ªÉn th·ªã m√¥n h·ªçc
    }

    private void initialize() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setBounds(100, 100, 895, 652);
        setLocationRelativeTo(null);

        contentPane = new JPanel();
        contentPane.setBackground(new Color(0, 0, 121));
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);

        JPanel panel = new JPanel();
        panel.setBackground(new Color(255, 204, 0));
        panel.setBounds(0, 0, 881, 57);
        panel.setLayout(null);
        contentPane.add(panel);

        JLabel lblTitle = new JLabel("GIAO B√ÄI T·∫¨P");
        lblTitle.setBounds(342, 11, 198, 37);
        panel.add(lblTitle);
        lblTitle.setForeground(new Color(0, 0, 0));
        lblTitle.setFont(new Font("Times New Roman", Font.BOLD, 25));

        JLabel lblTieuDe = new JLabel("TI√äU ƒê·ªÄ:");
        lblTieuDe.setFont(new Font("Times New Roman", Font.BOLD, 15));
        lblTieuDe.setForeground(new Color(255, 255, 255));
        lblTieuDe.setBounds(25, 147, 138, 30);
        contentPane.add(lblTieuDe);

        TieuDe_Text = new JTextField();
        TieuDe_Text.setFont(new Font("Times New Roman", Font.BOLD, 15));
        TieuDe_Text.setBounds(155, 148, 704, 31);
        contentPane.add(TieuDe_Text);
        TieuDe_Text.setColumns(10);

        JLabel lblGiaoVien = new JLabel("GI·∫¢NG VI√äN:");
        lblGiaoVien.setFont(new Font("Times New Roman", Font.BOLD, 15));
        lblGiaoVien.setForeground(new Color(255, 255, 255));
        lblGiaoVien.setBounds(25, 92, 145, 31);
        contentPane.add(lblGiaoVien);

        TenGV_text = new JTextField();
        TenGV_text.setFont(new Font("Times New Roman", Font.PLAIN, 15));
        TenGV_text.setBounds(155, 94, 292, 31);
        TenGV_text.setEditable(false); // Kh√¥ng cho ph√©p ch·ªânh s·ª≠a t√™n gi·∫£ng vi√™n
        contentPane.add(TenGV_text);
        TenGV_text.setColumns(10);

        JLabel lblMonHoc = new JLabel("T√äN M√îN:");
        lblMonHoc.setFont(new Font("Times New Roman", Font.BOLD, 15));
        lblMonHoc.setForeground(new Color(255, 255, 255));
        lblMonHoc.setBounds(469, 93, 114, 30);
        contentPane.add(lblMonHoc);

        Mon_comboBox = new JComboBox<>();
        Mon_comboBox.setFont(new Font("Times New Roman", Font.PLAIN, 15));
        Mon_comboBox.setBounds(559, 93, 300, 30);
        Mon_comboBox.setModel(new DefaultComboBoxModel<>(new String[]{"", "L·∫≠p Tr√¨nh H∆∞·ªõng ƒê·ªëi T∆∞·ª£ng", "H·ªá Th·ªëng nh√∫ng IOT", "H·ªá Th·ªëng C·∫£m Bi·∫øn","ƒêi·ªán To√°n ƒê√°m M√¢y","Ph√°t Tri·ªÉn ·ª©ng D·ª•ng","Ti·∫øng Anh"}));
        Mon_comboBox.setEnabled(false); // Kh√¥ng cho ph√©p ch·ªânh s·ª≠a m√¥n h·ªçc
        contentPane.add(Mon_comboBox);

        JLabel lblNoiDung = new JLabel("N·ªòI DUNG B√ÄI T·∫¨P");
        lblNoiDung.setForeground(Color.WHITE);
        lblNoiDung.setFont(new Font("Times New Roman", Font.BOLD, 15));
        lblNoiDung.setBounds(25, 190, 180, 41);
        contentPane.add(lblNoiDung);

        ND_textArea = new JTextArea();
        ND_textArea.setFont(new Font("Times New Roman", Font.BOLD, 15));
        JScrollPane scrollPane = new JScrollPane(ND_textArea); // Th√™m JScrollPane ƒë·ªÉ h·ªó tr·ª£ cu·ªôn
        scrollPane.setBounds(25, 229, 832, 244);
        contentPane.add(scrollPane);
        //ND_textArea.setBounds(25, 229, 832, 244);
        //contentPane.add(ND_textArea);

        JLabel lblHanNop = new JLabel("H·∫†N N·ªòP:");
        lblHanNop.setFont(new Font("Times New Roman", Font.BOLD, 15));
        lblHanNop.setForeground(new Color(255, 255, 255));
        lblHanNop.setBounds(75, 501, 88, 28);
        contentPane.add(lblHanNop);

        // S·ª≠ d·ª•ng JDateChooser ƒë·ªÉ ch·ªçn ng√†y
        NgayNop = new JDateChooser();
        NgayNop.setBounds(163, 501, 150, 30);
        NgayNop.setFont(new Font("Times New Roman", Font.PLAIN, 15));
        NgayNop.setDateFormatString("dd/MM/yyyy");
        contentPane.add(NgayNop);

        // H·∫°n n·ªôp - Gi·ªù
        JLabel lblHanNopGio = new JLabel("Gi·ªù n·ªôp:");
        lblHanNopGio.setFont(new Font("Segoe UI", Font.BOLD, 18));
        lblHanNopGio.setForeground(new Color(255, 255, 255));
        lblHanNopGio.setBounds(510, 499, 88, 30);
        contentPane.add(lblHanNopGio);

        TimePickerSettings timeSettings = new TimePickerSettings();
        timeSettings.setDisplaySpinnerButtons(true);
        timeSettings.setColor(TimePickerSettings.TimeArea.TimePickerTextDisabled, new Color(0, 51, 102));
        timeSettings.setFormatForDisplayTime("hh:mm a"); // Hi·ªÉn th·ªã AM/PM trong TimePicker
        timePicker = new TimePicker(timeSettings);
        timePicker.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        timePicker.setBounds(608, 501, 150, 30);
        //timePicker.setLayout(null);
        contentPane.add(timePicker);

        JButton Giaobai_bnt = new JButton("GIAO B√ÄI");
        Giaobai_bnt.setForeground(Color.BLACK);
        Giaobai_bnt.setFont(new Font("Times New Roman", Font.BOLD, 15));
        Giaobai_bnt.setBorder(new LineBorder(Color.WHITE, 1));
        Giaobai_bnt.setBackground(new Color(0, 221, 55));
        Giaobai_bnt.setBounds(356, 562, 162, 42);
        contentPane.add(Giaobai_bnt);

        // Th√™m s·ª± ki·ªán cho n√∫t GIAO B√ÄI
        Giaobai_bnt.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String tenGV = TenGV_text.getText();
                String monHoc = (String) Mon_comboBox.getSelectedItem();
                String tieuDe = TieuDe_Text.getText();
                String noiDung = ND_textArea.getText();
                Date selectedDate = NgayNop.getDate();
                LocalTime selectedTime = timePicker.getTime(); // L·∫•y th·ªùi gian t·ª´ TimePicker

                // Ki·ªÉm tra xem th√¥ng tin c√≥ ƒë·∫ßy ƒë·ªß kh√¥ng
                if (tenGV.isEmpty() || monHoc == null || monHoc.isEmpty()) {
                    JOptionPane.showMessageDialog(GiaoBaiTap.this,
                            "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin gi·∫£ng vi√™n v√† m√¥n h·ªçc!",
                            "C·∫£nh b√°o",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (tieuDe.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(GiaoBaiTap.this,
                            "Vui l√≤ng ƒëi·ªÅn ti√™u ƒë·ªÅ b√†i t·∫≠p!",
                            "C·∫£nh b√°o",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (noiDung.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(GiaoBaiTap.this,
                            "Vui l√≤ng ƒëi·ªÅn n·ªôi dung b√†i t·∫≠p!",
                            "C·∫£nh b√°o",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (selectedDate == null) {
                    JOptionPane.showMessageDialog(GiaoBaiTap.this,
                            "Vui l√≤ng ch·ªçn ng√†y h·∫°n n·ªôp h·ª£p l·ªá!",
                            "C·∫£nh b√°o",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (selectedTime == null) {
                    JOptionPane.showMessageDialog(GiaoBaiTap.this,
                            "Vui l√≤ng ch·ªçn gi·ªù h·∫°n n·ªôp h·ª£p l·ªá!",
                            "C·∫£nh b√°o",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }

                // K·∫øt h·ª£p ng√†y v√† gi·ªù th√†nh m·ªôt ƒë·ªëi t∆∞·ª£ng Date
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(selectedDate);

                // L·∫•y gi·ªù v√† ph√∫t t·ª´ LocalTime
                int hour = selectedTime.getHour();
                int minute = selectedTime.getMinute();

                calendar.set(Calendar.HOUR_OF_DAY, hour);
                calendar.set(Calendar.MINUTE, minute);
                calendar.set(Calendar.SECOND, 0);
                calendar.set(Calendar.MILLISECOND, 0);

             // L∆∞u b√†i t·∫≠p v√†o danh s√°ch
                Date hanNop = calendar.getTime();
                BaiTapInfo baiTap = new BaiTapInfo(tieuDe, noiDung, hanNop, tenGV, monHoc);
                danhSachBaiTap.add(baiTap);

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy hh:mm a");
                String hanNopStr = sdf.format(hanNop);
                String thongBao = "üìå Giao b√†i th√†nh c√¥ng!\n\n"
                        + "Ti√™u ƒë·ªÅ: " + tieuDe + "\n"
                        + "Gi·∫£ng vi√™n: " + tenGV + "\n"
                        + "M√¥n h·ªçc: " + monHoc + "\n"
                        + "H·∫°n n·ªôp: " + hanNopStr;

                JOptionPane.showMessageDialog(GiaoBaiTap.this, thongBao, "Th√†nh c√¥ng", JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }
    

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    GiaoBaiTap frame = new GiaoBaiTap();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }
}